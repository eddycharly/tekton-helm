{{- if .Values.rbac.create }}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "pipelines.fullname" . }}-webhook
  labels:
    {{- include "pipelines.baseLabels" . | nindent 4 }}
    {{- include "pipelines.helmLabels" . | nindent 4 }}
    {{- include "pipelines.componentLabels" "webhook" | nindent 4 }}
rules:
  # The webhook needs to be able to list and update customresourcedefinitions,
  # mainly to update the webhook certificates.
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
      - customresourcedefinitions/status
    verbs:
      - get
      - list
      - update
      - patch
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    # The webhook performs a reconciliation on these two resources and continuously
    # updates configuration.
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    # knative starts informers on these things, which is why we need get, list and watch.
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    # This mutating webhook is responsible for applying defaults to tekton objects
    # as they are received.
    resourceNames:
      - webhook.pipeline.tekton.dev
    # When there are changes to the configs or secrets, knative updates the mutatingwebhook config
    # with the updated certificates or the refreshed set of rules.
    verbs:
      - get
      - update
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    # validation.webhook.pipeline.tekton.dev performs schema validation when you, for example, create TaskRuns.
    # config.webhook.pipeline.tekton.dev validates the logging configuration against knative's logging structure
    resourceNames:
      - validation.webhook.pipeline.tekton.dev
      - config.webhook.pipeline.tekton.dev
    # When there are changes to the configs or secrets, knative updates the validatingwebhook config
    # with the updated certificates or the refreshed set of rules.
    verbs:
      - get
      - update
  {{- if .Values.podSecurityPolicy.enabled }}
  - apiGroups: 
      - policy
    resources: 
      - podsecuritypolicies
    resourceNames: 
      - {{ template "pipelines.fullname" . }}
    verbs: 
      - use
  {{- end }}
{{- end }}
